
@{
    ViewData["Title"] = "JWTTest";
}

<h1>JWTTest</h1>


<button onclick="onclick_reqJWTToken">请求测试Token</button>

    <script type="text/javascript">

        let JWT_Token = "";
        /**
         * @@param {成功时,调用}} resolve
         * @@param {失败时,调用} reject
         */
        let inner = function (resolve, reject) {
            let req = new XMLHttpRequest();

            /* jwt 表头setse设置 */
            req.setRequestHeader('Authorization', `Bearer token ${JWT_Token}`);
            
            req.onload = () => {
                resolve(req.response);
            };

            req.onerror = () => {
                reject(req.error);
            };

            req.open(method, url, true);
            req.send(data);
        };
        
        console.log('say hello : ');
        document.onload = () => {

            console.log('say hello : ');
            Req(`/Exam/Home`, `get`).then((data) => {
                console.log('success : ', data);
            }).catch((error) => {
                    console.error('error : ', error);
                });
        };
        /**
         * ajax网络请求
         */
        function Req(url, method, data) {
            let promise = new Promise(inner);
            return promise;
        };


        function onclick_reqJWTToken()
        {
            let inner = function (resolve, reject) {
                let req = new XMLHttpRequest();

                /* jwt 表头setse设置 */
                req.setRequestHeader('Authorization', `Bearer token ${JWT_Token}`);

                req.onload = () => {
                    resolve(req.response);
                };

                req.onerror = () => {
                    reject(req.error);
                };

                req.open(method, url, true);
                req.send(data);
            };

        }
    </script>